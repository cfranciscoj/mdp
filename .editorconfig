# top-most editorconfig file
root = true

[*]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8
indent_size = 4
indent_style = space

[*.{js,yml,html,css,json}]
indent_size = 2

#   vim plugin https://github.com/editorconfig/editorconfig-vim.git
#
#
#   Documentation from https://editorconfig.org
#
#   *	Matches any string of characters, except path separators (/)
#   **	Matches any string of characters
#   ?	Matches any single character
#
#   [name]	Matches any single character in name
#   [!name]	Matches any single character not in name
#
#   {s1,s2,s3}	Matches any of the strings given (separated by commas)
#   (Available since EditorConfig Core 0.11.0)
#
#   {num1..num2}	Matches any integer numbers between num1 and num2, where num1 and num2 can be either positive or negative
#
#   Special characters can be escaped with a backslash so they won't be interpreted as wildcard patterns.
#
#
#   Supported Properties
#   Note that not all properties are supported by every plugin. The wiki has
#   a complete list of properties.
#
#   indent_style: set to tab or space to use hard tabs or soft tabs respectively.
#
#   indent_size: a whole number defining the number of columns used for each
#   indentation level and the width of soft tabs (when supported).
#   When set to tab, the value of tab_width (if specified) will be used.
#
#   tab_width: a whole number defining the number of columns used to represent
#   a tab character. This defaults to the value of indent_size and doesn't
#   usually need to be specified.
#
#   end_of_line: set to lf, cr, or crlf to control how line breaks are represented.
#
#   charset: set to latin1, utf-8, utf-8-bom, utf-16be or utf-16le to control
#   the character set.
#
#   trim_trailing_whitespace: set to true to remove any whitespace characters
#   preceding newline characters and false to ensure it doesn't.
#
#   insert_final_newline: set to true to ensure file ends with a newline when
#   saving and false to ensure it doesn't.
#
#   root: special property that should be specified at the top of the file
#   outside of any sections. Set to true to stop .editorconfig files search on current file.
#
#   For any property, a value of unset is to remove the effect of that property,
#   even if it has been set before. For example, add indent_size = unset to
#   undefine indent_size property (and use editor default).
#
#   Currently all properties and values are case-insensitive. They are lowercased
#   when parsed. Generally, if a property is not specified, the editor settings will
#   be used, i.e. EditorConfig takes no effect on that part. For any property,
#   a value of unset is to remove the effect of that property, even if it has
#   been set before. For example, add indent_size = unset to undefine indent_size
#   property (and use editor default).
#
#   It is acceptable and often preferred to leave certain EditorConfig properties
#   unspecified. For example, tab_width need not be specified unless it differs
#   from the value of indent_size. Also, when indent_style is set to tab, it may
#   be desirable to leave indent_size unspecified so readers may view the file using
#   their preferred indentation width. Additionally, if a property is not standardized
#   in your project (end_of_line for example), it may be best to leave it blank.
#
